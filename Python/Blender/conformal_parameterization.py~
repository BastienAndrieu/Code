import numpy

import sys
sys.path.append('/d/bandrieu/GitHub/Code/Python')
import lib_halfedge as lhe

f2v = []
f = open('f2v.dat','r')
for l in f:
    f2v.append([int(a) for a in l.split()])
f.close()


nv = 0
for f in f2v:
    for v in f:
        nv = max(nv, v)
nv += 1


# Laplacian matrix
L = numpy.zeros((nv,nv))
uv = numpy.zeros((nv,2))

f = open('conformal_laplacian_matrix.dat','r')
for l in f:
    s = l.split()
    i = int(s[0])
    j = int(s[1])
    w = float(s[2])
    L[i,j] = L[i,j] + w
f.close()

# boundary
boundary = []
f = open('boundary.dat','r')
for l in f:
    boundary.append(int(l))
f.close()

# fix boundary
nb = len(boundary)
t = numpy.linspace(0,2.0*numpy.pi,nb+1)
for i, j in enumerate(boundary):
    uv[j,0] = numpy.cos(t[i])
    uv[j,1] = numpy.sin(t[i])

# solve
uv = numpy.linalg.solve(L, uv)


# make halfedge mesh for plot




    
